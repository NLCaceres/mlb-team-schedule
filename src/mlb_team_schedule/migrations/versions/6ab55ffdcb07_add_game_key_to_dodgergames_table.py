"""Add Game Key to DodgerGames Table

Revision ID: 6ab55ffdcb07
Revises: 9e5d02069ea5
Create Date: 2023-11-06 11:06:07.561350

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6ab55ffdcb07'
down_revision = '9e5d02069ea5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    #? Don't need to set minValue of the Sequence, since descending sequences set the minValue based on the Sequence's type
    gameKey_seq = sa.Sequence('gameKey_seq', -1, -1) #? which is bigint by default, which for Postgres has a min of (-2)**63
    #* It's okay for the gameKey to use negative vals as a default because no gameKey from the MLB-API will ever be negative
    #* All future Games should always receive gameKeys, letting the DEFAULT be a fallback & cue for the update CRON Job
    op.execute(sa.schema.CreateSequence(gameKey_seq)) #? Runs a `CREATE SEQUENCE` command so the column can use it

    op.add_column('dodger_games', sa.Column('gameKey', sa.Integer(),
                                            gameKey_seq, server_default=gameKey_seq.next_value(),
                                            unique=True, nullable=False))
    #? Server_default prevents a 'NULL in NON-NULL column' IntegrityError because it sets the column DEFAULT to
    #? `next_value(gameKey_seq)`, generating all vals of the Sequence if no val supplied when using the ORM or direct SQL

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_column('dodger_games', 'gameKey')
    #? PostgreSQL is case-sensitive so quoted strings are a MUST if a name uses camelCasing instead of pure snake_case
    op.execute('DROP SEQUENCE "gameKey_seq"') #? Currently, there doesn't seem to be a simpler Alembic way to `DROP SEQUENCE`

    # ### end Alembic commands ###
